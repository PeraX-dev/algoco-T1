----------- Selection Sort -------------- O(n^2)
#include <iostream>
using namespace std;

// cambia pos de elementos
void swap(int *a, int *b) {
  int temp = *a;
  *a = *b;
  *b = temp;
}

void printArray(int array[], int size) {
  for (int i = 0; i < size; i++) {
    cout << array[i] << " ";
  }
  cout << endl;
}

void selectionSort(int array[], int size) {
  for (int step = 0; step < size - 1; step++) {
    int min_idx = step;
    for (int i = step + 1; i < size; i++) { 
      // Dependiendo de > o < el ordenamiento cambia (de mayor a menor o menor a mayor)
      if (array[i] < array[min_idx])
        min_idx = i;
    }

    // put min at the correct position
    swap(&array[min_idx], &array[step]);
  }
}

int main() {
  int cant;
  cout<<"Ingrese cantidad de datos: "<<endl;
  cin>>cant;
  int data[cant];
  for(int i = 0; i < cant; i++){
  	cin>>data[i];
  }
  int size = sizeof(data) / sizeof(data[0]);
  selectionSort(data, size);
  cout << "Sorted array in Acsending Order:\n";
  printArray(data, size);
}

-----------------------------------------

-------------- Merge Sort --------------- O(n*log(n))

#include <iostream>
using namespace std;

// junta los sub-arreglos
void merge(int arr[], int p, int q, int r) {
  
  int n1 = q - p + 1;
  int n2 = r - q;

  int L[n1], M[n2];

  for (int i = 0; i < n1; i++)
    L[i] = arr[p + i];
  for (int j = 0; j < n2; j++)
    M[j] = arr[q + 1 + j];

  int i, j, k;
  i = 0;
  j = 0;
  k = p;

  while (i < n1 && j < n2) {
    if (L[i] <= M[j]) {
      arr[k] = L[i];
      i++;
    } else {
      arr[k] = M[j];
      j++;
    }
    k++;
  }

  while (i < n1) {
    arr[k] = L[i];
    i++;
    k++;
  }

  while (j < n2) {
    arr[k] = M[j];
    j++;
    k++;
  }
}

// divide el arreglo en 2 sub-arreglos, sortea estos y despuÃ©s los une
void mergeSort(int arr[], int l, int r) {
  if (l < r) {
    // m es donde el arreglo se divide en 2
    int m = l + (r - l) / 2;

    mergeSort(arr, l, m);
    mergeSort(arr, m + 1, r);

    // junta los sub-arreglos sorteados
    merge(arr, l, m, r);
  }
}

void printArray(int arr[], int size) {
  for (int i = 0; i < size; i++)
    cout << arr[i] << " ";
  cout << endl;
}

int main() {
  int cant;
  cout<<"Ingrese cantidad de datos: "<<endl;
  cin>>cant;
  int arr[cant];
  for(int i = 0; i < cant; i++){
  	cin>>arr[i];
  }
  int size = sizeof(arr) / sizeof(arr[0]);

  mergeSort(arr, 0, size - 1);

  cout << "Arreglo ordenado: \n";
  printArray(arr, size);
  return 0;
}

-----------------------------------------
